Description: CodePipeline to Build Ephemeral Environments

Parameters:
  S3BucketName:
    Description: A unique bucket name.
    Type: String
    Default: yourname-ephemeral-env

Resources:

  # PIPELINE TO CREATE ENV

  EphemeralEnvCodePipelineProjectCreate:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: EphemeralEnvS3BucketForCodePipeline
    Properties:
      Name: EphemeralEnvCodePipelineCreate
      RoleArn: !GetAtt EphemeralEnvCodePipelineServiceRole.Arn
      Stages:
        - Name: SourceStage
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                PollForSourceChanges: 'false'
                S3Bucket: !Sub ${S3BucketName}
                S3ObjectKey: nonexistent.zip
              OutputArtifacts:
                - Name: SourceOutput
        - Name: BuildStage
          Actions:
            - Name: BuildAction
              RunOrder: 1
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref EphemeralEnvCodeBuildProjectCreate
                EnvironmentVariables: !Sub |
                  [
                    {"name": "BRANCH", "value": "#{GitHubSource.BranchName}"},
                  ]
              OutputArtifacts:
                - Name: BuildArtifact
      ArtifactStore:
        Location: !Ref S3BucketName
        Type: S3

  EphemeralEnvCodeBuildProjectCreate:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: EphemeralEnvCodeBuildProject
      Source:
        Type: CODEPIPELINE
        GitCloneDepth: 1
        BuildSpec: backend-app/src/main/codebuild/staging/buildspec-create.yml
      Environment:
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:2.0
        ComputeType: BUILD_GENERAL1_SMALL
      ServiceRole: !Ref EphemeralEnvCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: EphemeralEnvCodeBuildProject-CloudWatchLogs-BuildLogGroup-Name

  # PIPELINE TO DESTROY ENV

  EphemeralEnvCodePipelineProjectDestroy:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: EphemeralEnvS3BucketForCodePipeline
    Properties:
      Name: EphemeralEnvCodePipelineDestroy
      RoleArn: !GetAtt EphemeralEnvCodePipelineServiceRole.Arn
      Stages:
        - Name: SourceStage
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                PollForSourceChanges: 'false'
                S3Bucket: !Sub ${S3BucketName}
                S3ObjectKey: nonexistent.zip
              RunOrder: 1
        - Name: BuildStage
          Actions:
            - Name: BuildAction
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref EphemeralEnvCodeBuildProjectDestroy
      ArtifactStore:
        Location: !Ref S3BucketName
        Type: S3

  EphemeralEnvCodeBuildProjectDestroy:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: EphemeralEnvCodeBuildProject
      Source:
        Type: CODEPIPELINE
        GitCloneDepth: 1
        BuildSpec: backend-app/src/main/codebuild/staging/buildspec-destroy.yml
      Environment:
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:2.0
        ComputeType: BUILD_GENERAL1_SMALL
      ServiceRole: !Ref EphemeralEnvCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: EphemeralEnvCodeBuildProject-CloudWatchLogs-BuildLogGroup-Name

  #ROLES

  EphemeralEnvCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ephemeral-env-code-pipeline-project-codepipeline-base-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: '*'
                Effect: Allow
              - Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  - codecommit:CancelUploadArchive
                Resource: '*'
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
                Effect: Allow
              - Action:
                  - iam:PassRole
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: '*'
                Effect: Allow
              - Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: '*'
                Effect: Allow
              - Action:
                  - servicecatalog:ListProvisioningArtifacts
                  - servicecatalog:CreateProvisioningArtifacts
                  - servicecatalog:DescribeProvisioningArtifacts
                  - servicecatalog:DeleteProvisioningArtifacts
                  - servicecatalog:UpdateProduct
                Resource: '*'
                Effect: Allow
              - Action:
                  - ecr:DescribeImages
                Resource: '*'
                Effect: Allow
        - PolicyName: ephemeral-env-code-pipeline-project-ssm-parameterstore-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ssm:DescribeParameters
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
                Action:
                  - ssm:GetParameters

  EphemeralEnvCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: EphemeralEnvCodeBuildProject-codebuild-base-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:EphemeralEnvCodeBuildProject-CloudWatchLogs-BuildLogGroup-Name
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:EphemeralEnvCodeBuildProject-CloudWatchLogs-BuildLogGroup-Name:*
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}/*
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
        - PolicyName: ephemeral-env-code-build-projec-vpc-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*
                Action:
                  - ec2:CreateNetworkInterfacePermission
                Condition:
                  StringEquals:
                    # ec2:Subnet:
                    #   - Fn::ImportValue: !Sub ${AWS::StackName}-PrivateSubnet1Arn
                    #   - Fn::ImportValue: !Sub ${AWS::StackName}-PrivateSubnet2Arn
                    ec2:AuthorizedService: codebuild.amazonaws.com
        - PolicyName: ephemeral-env-code-build-project-ssm-parameterstore-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ssm:DescribeParameters
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
                Action:
                  - ssm:GetParameters

  EphemeralEnvECSRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  # ECS CLUSTER

  EphemeralEnvECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EphemeralEnvECSRole

  EphemeralEnvECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ephemeral-env-cluster
      Tags:
        - Key: Name
          Value: EphemeralEnvECSCluster

  # S3 BUCKET

  EphemeralEnvS3BucketForCodePipeline:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${S3BucketName}
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
